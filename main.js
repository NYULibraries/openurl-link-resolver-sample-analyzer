import * as path from 'node:path';
import process from 'process';

import yargs from 'yargs';
import { hideBin } from 'yargs/helpers'

import { linksReportCommand } from './lib/commands/links.js';
import { STATS_REPORT_FILE, statsReportCommand } from './lib/commands/stats.js';

function abort( errorMessage ) {
    console.error( errorMessage );
    process.exit( 1 );
}

function parseArgs() {
    return yargs( hideBin( process.argv ) )
        .scriptName( "openurl-link-resolver-sample-analyzer" )
        .usage( '$0 <cmd> [args]' )
        .command( 'links [directory]', 'Generate links report JSON file',
            ( yargs ) => {
                yargs.positional( 'directory', {
                    type     : 'string',
                    describe : 'Directory containing the sample'
                } );
            },
            function ( argv ) {
                const sampleDirectory = path.resolve( argv.directory );

                linksReportCommand( sampleDirectory );
            } )
        .command( 'stats [file]', 'Generate stats report CSV file',
                  ( yargs ) => {
                      yargs.positional( 'file', {
                          type     : 'string',
                          describe : 'File generated by `links-report` command containing the sample'
                      } );
                  },
                  function ( argv ) {
                      const linksReportFile = path.resolve( argv.file );

                      statsReportCommand( linksReportFile );
                  } )
        .help()
        .argv;
}

async function main() {
    const argv = parseArgs();
}

main();
